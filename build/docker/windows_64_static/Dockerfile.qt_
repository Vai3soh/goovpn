#docker build -t therecipe/qt:linux -f Dockerfile.qt_ .
#docker load --input docker.qt_.tar

FROM ubuntu:20.04 as base

ENV GO_VER 1.19 
ENV USER user
ENV HOME /home/$USER
ENV GOPATH $HOME/work
ENV go /usr/local/go/bin/go
ENV QT_PROJ_GIT_PATH $GOPATH/src/github.com/therecipe/qt
ENV QT_REPO https://ftp.jaist.ac.jp/pub/qtproject

RUN apt-get -qq update && \
DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends \
-qq -y install ca-certificates curl git

RUN GO=go$GO_VER.linux-amd64.tar.gz && \
curl -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/$GO && \
tar -xzf $GO -C /usr/local

RUN git clone https://github.com/therecipe/qt/ \
$HOME/work/src/github.com/therecipe/qt && cd $QT_PROJ_GIT_PATH && \
find . -type f -print0 | \
xargs -0 sed -i 's/download\.qt\.io/ftp\.jaist\.ac\.jp\/pub\/qtproject\//g' && \
$go install -v -tags=no_env github.com/therecipe/qt/cmd/... || :

RUN cd $QT_PROJ_GIT_PATH && \
$go get github.com/therecipe/qt/internal/binding/files/docs/5.12.0 && \
$go get github.com/therecipe/qt/internal/binding/files/docs/5.13.0 && \
$go get github.com/therecipe/qt/internal/cmd/moc && \
$go install -v -tags=no_env github.com/therecipe/qt/cmd/... 

RUN apt-get -qq update && \
DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -qq \
-y install dbus fontconfig libx11-6 libx11-xcb1

ENV QT qt-opensource-linux-x64-5.13.0.run

RUN curl --progress-bar --retry 10 --retry-delay 60 -O \
$QT_REPO/archive/qt/5.13/5.13.0/$QT && \
chmod +x $QT

RUN QT_QPA_PLATFORM=minimal ./$QT --verbose --addTempRepository $QT_REPO/ \
--no-force-installations --script $GOPATH/src/github.com/\
therecipe/qt/internal/ci/iscript.qs \
LINUX=true

RUN find /opt/Qt5.13.0/5.13.0 -type f -name "*.debug" -delete
RUN find /opt/Qt5.13.0/Docs -type f ! -name "*.index" -delete

RUN apt-get -qq update && apt-get --no-install-recommends -qq -y \
install binutils

RUN find /opt/Qt5.13.0/5.13.0/gcc_64 -type f ! -name "*.a" ! \
-name "*.la" ! -name "*.h" ! -name "*.prl" -name "lib*" -exec strip -s {} \;

RUN tar -cvzpf /tmp/all.tar.gz /usr/local/go $GOPATH/bin \
$GOPATH/src/github.com/therecipe/qt /opt/Qt5.13.0/5.13.0 \
/opt/Qt5.13.0/Docs /opt/Qt5.13.0/Licenses

FROM ubuntu:20.04
LABEL maintainer therecipe

ENV USER user
ENV HOME /home/$USER
ENV GOPATH $HOME/work
ENV PATH /usr/local/go/bin:$PATH
ENV QT_DIR /opt/Qt5.13.0
ENV QT_DOCKER true
ENV QT_VERSION 5.13.0
ENV QT_PROJ_GIT_PATH $GOPATH/src/github.com/therecipe/qt

COPY --from=base /tmp/all.tar.gz /tmp/all.tar.gz

RUN tar -xvzpf /tmp/all.tar.gz && rm -rf /tmp/all.tar.gz && \
apt-get -qq update && \
DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -qq \
-y install build-essential libglib2.0-dev libglu1-mesa-dev \
libpulse-dev fontconfig libasound2 libegl1-mesa libnss3 libpci3 \
libxcomposite1 libxcursor1 libxi6 libxrandr2 libxtst6 \
fcitx-frontend-qt5 curl unzip ca-certificates git pkg-config && \
cd $QT_PROJ_GIT_PATH && $GOPATH/bin/qtsetup prep && \
$GOPATH/bin/qtsetup check && \
$GOPATH/bin/qtsetup generate && cd $QT_PROJ_GIT_PATH/internal/\
examples/widgets/line_edits && \
$GOPATH/bin/qtdeploy build linux && rm -rf ./deploy

ENV PATH $HOME/flutter/bin:$PATH

RUN git clone -q --depth 1 -b stable \
https://github.com/flutter/flutter.git $HOME/flutter

RUN flutter config --no-analytics && \
flutter precache --linux --no-android
